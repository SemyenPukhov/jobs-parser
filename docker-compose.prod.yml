version: "3.9"

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 3s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: alembic upgrade head
    working_dir: /app
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: 5432
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_CHANNEL_ID: ${SLACK_CHANNEL_ID}
      ENVIRONMENT: ${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: on-failure:3
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: 5432
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}  
    restart: unless-stopped
    ports:
      - "80:80"  # лучше не 80, чтобы не было конфликта
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M

networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
