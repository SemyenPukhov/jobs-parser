name: Deploy to VPS

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy-jobs-parser

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Docker Compose
        run: |
          sudo curl -SL "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Exit on first error
            cd /home/deploy/app
            git config --global --add safe.directory /home/deploy/app

            echo "🧪 Проверка .env..."
            if [ ! -s .env ]; then
              echo "DB_USER=${{ secrets.DB_USER }}" > .env
              echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
              echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
              echo "SSH_HOST=${{ secrets.SSH_HOST }}" >> .env
              chown deploy:deploy .env
              chmod 600 .env
            fi

            echo "📦 Обновление исходного кода..."
            if [ ! -d .git ]; then
              [ -f .env ] && cp .env /tmp/.env_bak
              rm -rf ./*
              git clone https://github.com/${{ github.repository }} .
              [ -f /tmp/.env_bak ] && mv /tmp/.env_bak .env
            else
              [ -f .env ] && cp .env /tmp/.env_bak
              git fetch origin ${{ github.event.inputs.branch }}
              git reset --hard origin/${{ github.event.inputs.branch }}
              git clean -fdx
              [ -f /tmp/.env_bak ] && mv /tmp/.env_bak .env
            fi

            echo "🐳 Запуск docker-compose..."
            if [ ! -f docker-compose.prod.yml ]; then
              echo "Файл docker-compose.prod.yml не найден!" >&2
              exit 1
            fi

            docker-compose -f docker-compose.prod.yml up -d --build --force-recreate --always-recreate-deps
            docker system prune -f
            echo "✅ Деплой завершён"
